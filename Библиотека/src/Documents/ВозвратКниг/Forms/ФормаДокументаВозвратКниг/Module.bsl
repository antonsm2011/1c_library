
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Если в документ были переданы параметры устройства то добавим в таб часть устройство
	Если ЗначениеЗаполнено(ЭтаФорма.Параметры.МассивКниг)
		И Объект.Книги.Количество()=0 Тогда
		Для каждого Книга из ЭтаФорма.Параметры.МассивКниг цикл
			НоваяСтрока = Объект.Книги.Добавить();
			НоваяСтрока.Книга = Книга;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбновитьАвторовКниг();
	
КонецПроцедуры

// При изменении строки перечитываем авторов
&НаКлиенте
Процедура КнигиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Элемент.ТекущиеДанные.Авторы = ПолучитьСтрокуАвторовВызов(Элемент.ТекущиеДанные.Книга);
		
КонецПроцедуры


// При открытии формы перечитываем авторов книг
&НаСервере
Процедура ОбновитьАвторовКниг()
	
	Для каждого СтрокаТЧ из Объект.Книги цикл
		СтрокаТЧ.Авторы = ПолучитьСтрокуАвторовВызов(СтрокаТЧ.Книга);
	КонецЦикла;
	
КонецПроцедуры

// Данная функция предназначена для вызова функции(серв) общего глобального модуля
// Потому что я еще не понял как из клиентской процедуры модуля управляемой формы
// Вызвать серверную процедуру общего глобального модуля
&НаСервереБезКонтекста
Функция ПолучитьСтрокуАвторовВызов(СсылкаНаКнигу)
	
	Возврат ОбщегоНазначенияСервер.ПолучитьСтрокуАвторов(СсылкаНаКнигу);
	
КонецФункции

// Процедура зполняет табличную часть документа возврата книгами, которые на данный момент находятся у абонента
&НаКлиенте
Процедура ЗаполнитьПоЗадолженности(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Абонент) тогда
		Сообщить("Не заполнен реквизит абонент");	
		Возврат;
	КонецЕсли;
	
	Если Вопрос("Будет очищена табичная часть. Продолжить?", РежимДиалогаВопрос.ДаНет,0) = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Книги.Очистить();
	ЗаполнитьТЧКниги();
	ОбновитьАвторовКниг();
	
КонецПроцедуры

// Процедура зполняет табличную часть документа возврата книгами, которые на данный момент находятся у абонента
&НаСервере
Процедура ЗаполнитьТЧКниги()
	
	Документ = РеквизитФормыВЗначение("Объект");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КнигиВБиблиотекеОстатки.Книга
		|ИЗ
		|	РегистрНакопления.КнигиВБиблиотеке.Остатки(&ДатаКон, МестоРазмещения = &МестоРазмещения) КАК КнигиВБиблиотекеОстатки";
	
	Запрос.УстановитьПараметр("ДатаКон", ТекущаяДата());
	Запрос.УстановитьПараметр("МестоРазмещения", Документ.Абонент);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Строка = Документ.Книги.Добавить();
		Строка.Книга = ВыборкаДетальныеЗаписи.Книга;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Документ, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборКниг(Команда)
	
	ПараметрыПодбора = Новый Структура("МножественныйВыбор", Истина);
	ОткрытьФорму("Справочник.Книги.ФормаВыбора", ПараметрыПодбора, Элементы.Книги);
	
КонецПроцедуры

&НаКлиенте
Процедура КнигиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВыбранныеКниги = РазложитьГруппыКниг(ВыбранноеЗначение);
	
	Для Каждого Книга Из ВыбранныеКниги Цикл
		НоваяСтрока = Объект.Книги.Добавить();
		НоваяСтрока.Книга = Книга;
		НоваяСтрока.Авторы = ПолучитьСтрокуАвторовВызов(Книга);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РазложитьГруппыКниг(СписокКнигСГруппами)
	Возврат ОбщегоНазначенияСервер.РазложитьГруппыКниг(СписокКнигСГруппами);
КонецФункции