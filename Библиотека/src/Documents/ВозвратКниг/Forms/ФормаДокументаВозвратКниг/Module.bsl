//при изменении строки перечитываем авторов
&НаКлиенте
Процедура КнигиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Элемент.ТекущиеДанные.Авторы = ПолучитьСтрокуАвторовВызов(Элемент.ТекущиеДанные.Книга);	
КонецПроцедуры

//при открытии формы перечитываем авторов книг
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьАвторовКниг();
КонецПроцедуры

//при открытии формы перечитываем авторов книг
&НаКлиенте
Процедура ОбновитьАвторовКниг()
	Для каждого СтрокаТЧ из Объект.Книги цикл
		СтрокаТЧ.Авторы = ПолучитьСтрокуАвторовВызов(СтрокаТЧ.Книга);	
	КонецЦикла;
КонецПроцедуры

//данная функция предназначена для вызова функции(серв) общего глобального модуля
//потому что я еще не понял как из клиентской процедуры модуля управляемой формы \
//вызвать серверную процедуру общего глобального модуля
&НаСервере
Функция ПолучитьСтрокуАвторовВызов(СсылкаНаКнигу)
	Возврат ОбщегоНазначения.ПолучитьСтрокуАвторов(СсылкаНаКнигу);	
КонецФункции

//процедура зполняет табличную часть документа возврата книгами, которые на данный момент находятся у абонента
&НаКлиенте
Процедура ЗаполнитьПоЗадолженности(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Абонент) тогда
		Сообщить("Не заполнен реквизит абонент");	
		Возврат;
	КонецЕсли;
	Если Вопрос("Будет очищена табичная часть. Продолжить?", РежимДиалогаВопрос.ДаНет,0) = КодВозвратаДиалога.Нет ТОгда
		Возврат;
	КонецЕсли;
	Объект.Книги.Очистить();	
	ЗаполнитьТЧКниги();
	ОбновитьАвторовКниг();
КонецПроцедуры

//процедура зполняет табличную часть документа возврата книгами, которые на данный момент находятся у абонента
&НаСервере
Процедура ЗаполнитьТЧКниги()
	Документ = РеквизитФормыВЗначение("Объект");
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КнигиВБиблиотекеОстатки.Книга
		|ИЗ
		|	РегистрНакопления.КнигиВБиблиотеке.Остатки(&ДатаКон, МестоРазмещения = &МестоРазмещения) КАК КнигиВБиблиотекеОстатки";

	Запрос.УстановитьПараметр("ДатаКон", Документ.Дата);
	Запрос.УстановитьПараметр("МестоРазмещения", Документ.Абонент);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Строка = Документ.Книги.Добавить();
		Строка.Книга = ВыборкаДетальныеЗаписи.Книга;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	ЗначениеВРеквизитФормы(Документ, "Объект");
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//если в документ были переданы параметры устройства то добавим в таб часть устройство
	Если ЗначениеЗаполнено(ЭтаФорма.Параметры.МассивКниг)
		И Объект.Книги.Количество()=0 Тогда
		Для каждого Книга из ЭтаФорма.Параметры.МассивКниг цикл
			НоваяСтрока = Объект.Книги.Добавить();
			НоваяСтрока.Книга = Книга;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
