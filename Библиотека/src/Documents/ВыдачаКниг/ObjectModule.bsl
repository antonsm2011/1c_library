#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда // Для работы толстого клиента https://its.1c.ru/db/v8std#content:680:hdoc

// Проверим что бы был указан абонент
Функция ПроверитьШапкуДокумента(Отказ)
	
	Если Не ЗначениеЗаполнено(Абонент) Тогда
		Сообщить(НСтр("ru = 'Не указано лицо которому выдана книга (абонент). Проведение отменено.'"), СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Проверим остатки книг перед списанием
Функция ПроверитьОстатки(Отказ)
	
	Запрос = новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(КнигиВБиблиотекеОстатки.КоличествоОстаток, 0) КАК КоличествоРегистр,
	|	ВложенныйЗапрос.Количество КАК КоличествоДокумент,
	|	ВложенныйЗапрос.Книга,
	|	ВложенныйЗапрос.НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыдачаКнигКниги.Книга КАК Книга,
	|		1 КАК Количество,
	|		ВыдачаКнигКниги.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.ВыдачаКниг.Книги КАК ВыдачаКнигКниги
	|	ГДЕ
	|		ВыдачаКнигКниги.Ссылка = &Ссылка) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КнигиВБиблиотеке.Остатки(
	|				&ДатаКон,
	|				Книга В
	|						(ВЫБРАТЬ
	|							ВыдачаКнигКниги.Книга КАК Книга
	|						ИЗ
	|							Документ.ВыдачаКниг.Книги КАК ВыдачаКнигКниги
	|						ГДЕ
	|							ВыдачаКнигКниги.Ссылка = &Ссылка)
	|					И МестоРазмещения = ЗНАЧЕНИЕ(Справочник.МестаРазмещения.Библиотека)) КАК КнигиВБиблиотекеОстатки
	|		ПО (КнигиВБиблиотекеОстатки.Книга = ВложенныйЗапрос.Книга)";
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДатаКон", ЭтотОбъект.Дата);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для каждого Строка Из РезультатЗапроса Цикл
		Если Строка.КоличествоРегистр < Строка.КоличествоДокумент Тогда
			Сообщить(НСтр("ru = 'Недостаточно количества по позиции: '")+ Строка.Книга+ НСтр("ru = ' в строке: '") + Строка.НомерСтроки + НСтр("ru = ' Проведение отменено.'"), СтатусСообщения.Важное);		
			Отказ = Истина;
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ПроверитьШапкуДокумента(Отказ);
	ОбщегоНазначенияСервер.ПроверитьНаОдинаковыеПозиции(Книги, Отказ);
	ПроверитьОстатки(Отказ);
	
	Для Каждого ТекСтрокаКниги Из Книги Цикл
		// Регистр КнигиВБиблиотеке Приход
		// Сначала спишем
		Движение = Движения.КнигиВБиблиотеке.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Книга = ТекСтрокаКниги.Книга;
		Движение.МестоРазмещения = Справочники.МестаРазмещения.Библиотека;
		Движение.Операция = Перечисления.Операция.ВыдачаКнигиАбоненту;
		Движение.Количество = 1;
		// А теперь добавим
		Движение = Движения.КнигиВБиблиотеке.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Книга = ТекСтрокаКниги.Книга;
		Движение.МестоРазмещения = Абонент;
		Движение.Операция = Перечисления.Операция.ВыдачаКнигиАбоненту;
		Движение.Количество = 1;
	КонецЦикла;
	
КонецПроцедуры

// Обработка заполнения от задачи ЗаказКниги
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		// Если заполняем документ из бизнес процесса заказа книг
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ЗадачаСсылка.ЗаказКниги") Тогда
			Абонент = ДанныеЗаполнения.БизнесПроцесс.Автор.Абонент;	
			Книги.Загрузить(ДанныеЗаполнения.БизнесПроцесс.КнигиКЗаказу.Выгрузить());
			Дата = ТекущаяДата();
		// Если заполняем документ из массива ссылка на книги	
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Массив") Тогда
			Для каждого Книга Из ДанныеЗаполнения Цикл
				НоваяСтрока = Книги.Добавить();
				НоваяСтрока.Книга = Книга;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#Иначе
	ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
