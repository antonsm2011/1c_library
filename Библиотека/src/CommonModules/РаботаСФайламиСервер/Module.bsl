
// Функция помещает файл на диске во временное хранилище и возвращает адрес в хранилище
// Файл						- СправочникСсылка.Файлы2   - Ссылка на элемент справочника Файлы2
// УникальныйИдентификатор	- УникальныйИдентификатор	- Уникальныйи дентификатор формы, из которой вызывается функция. Нужен чтобы поотм стереть файл.
//
// Баданов - #9864 - Преределал входной параметр на СправочникСсылка.Файлы2. 
// До этого передавался путь до файла. Зачем? Ведь мы открываем файл, который есть в справочнике. Значит надо передать ссылку.
Функция ПоместитьФайлВоВременноеХранилище(Файл, УникальныйИдентификатор) Экспорт
	
	ДвоичныеДанные = ДвоичныеДанныеФайла(Файл);
	
	Возврат ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
	
КонецФункции

// Перемещает файл с одного места хранения в другое
//
// Параметры:
//  Файл - СправочникСсылка.Файлы - Файл, данные которого перемещаются
//  МестоНазначения  - Перечисления.МестаХраненияФайлов - Месту хранения куда необходимо переместить файл
//
Процедура ПеренестиФайл(Файл, МестоНазначения) Экспорт

	Если Файл.МестоХранения = МестоНазначения Тогда
		Возврат;
	КонецЕсли;
	
	ФайлОбъект = Файл.ПолучитьОбъект();
	
	ДанныеФайла = ДвоичныеДанныеФайла(Файл);
	
	Если МестоНазначения = Перечисления.МестаХраненияФайлов.ЛокальныйДиск Тогда 
		
		ИмяФайлаНаДиске = РаботаСФайламиСервер.СоздатьФайлНаДиске(ФайлОбъект.Наименование, ДанныеФайла, ФайлОбъект.ИдентификаторФайла);
		
		ФайлОбъект.МестоХранения	= Перечисления.МестаХраненияФайлов.ЛокальныйДиск;
		ФайлОбъект.ИмяФайлаНаДиске 	= ИмяФайлаНаДиске;
		ФайлОбъект.Данные 			= Неопределено;
		Попытка
			ФайлОбъект.Записать();
		Исключение
			ОписаниеОшибки = ОписаниеОшибки();
			ОбщегоНазначенияСервер.ЗафиксироватьОшибку("Произошла ошибка при переносе файла на локальный диск.", ОписаниеОшибки, Метаданные.Справочники.Файлы, Файл);
			Возврат;
		КонецПопытки;
		
	Иначе
		
		ФайлОбъект.МестоХранения	= Перечисления.МестаХраненияФайлов.ИнформационнаяБаза;
		ФайлОбъект.ИмяФайлаНаДиске 	= "";
		ФайлОбъект.Данные 			= Новый ХранилищеЗначения(ДанныеФайла, Новый СжатиеДанных());
		
		Попытка
			ФайлОбъект.Записать();
		Исключение
			ОписаниеОшибки = ОписаниеОшибки();
			ОбщегоНазначенияСервер.ЗафиксироватьОшибку("Произошла ошибка при переносе файла в информационную базу.", ОписаниеОшибки, Метаданные.Справочники.Файлы, Файл);
			Возврат;
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры // ПереместитьФайл()

// Создает файл на диске и возращает его имя
//
// Параметры:
//  КороткоеИмяФайла	 - Строка - Имя файла как его загрузил пользователь
//  ДанныеФайла			 - ДвоичныеДанные - Данные помещаемые на диск
//  ИдентификаторФайла	 - Строка - Уникальный идентификатор файла
// 
// Возвращаемое значение:
//   - Строка   - Имя файла на диске
//
Функция СоздатьФайлНаДиске(КороткоеИмяФайла, ДанныеФайла, ИдентификаторФайла) Экспорт
	
	ЧастиИмениФайла = СтрРазделить(КороткоеИмяФайла, ".");
	КороткоеИмяФайлаБезРасширения = ЧастиИмениФайла[0];
	РасширениеФайла = ЧастиИмениФайла[1];
	
	// Обрежем относительный путь к папке, если длина всего пути файла более 120 символов.
	ИмяФайлаНаДиске = Лев(КороткоеИмяФайлаБезРасширения, 120) + "_" + Строка(ИдентификаторФайла) + "." + РасширениеФайла;
	
	Если ОбщегоНазначенияВызовСервераПовтИсп.ТипПлатформы() = Перечисления.ТипПлатформы.Windows Тогда 
		Слеш = "\";
	Иначе
		Слеш = "/";
	КонецЕсли;
	
	ПутьКПапке = Константы.ПутьКФайламНаДиске.Получить();
	
	Каталог = Новый Файл(ПутьКПапке);
	Если Не Каталог.Существует() Тогда
		СоздатьКаталог(ПутьКПапке);
	КонецЕсли;
	
	ПолныйПутьКФайлу = ПутьКПапке + Слеш + ИмяФайлаНаДиске;
	
	Попытка
		ДанныеФайла.Записать(ПолныйПутьКФайлу);
	Исключение 
		ОписаниеОшибки = ОписаниеОшибки();
		ОбщегоНазначенияСервер.ЗафиксироватьОшибку("Произошла ошибка при сохранении файла на диске.", ОписаниеОшибки, Метаданные.Справочники.Файлы);
		Возврат Справочники.Файлы.ПустаяСсылка();
	КонецПопытки;
	
	Возврат ИмяФайлаНаДиске;
	
	
КонецФункции // СоздатьФайлНаДиске()

// Возваращает двоичные данные файла
//
// Параметры:
//  Файл - СправочникСсылка.Файлы - Файл, данные которого получаются
//
// Возвращаемое значение:
//   ДвоичныеДанные - Данные файла
//
Функция ДвоичныеДанныеФайла(Файл)

	Если Файл.МестоХранения = Перечисления.МестаХраненияФайлов.ЛокальныйДиск Тогда
		
		Если ОбщегоНазначенияВызовСервераПовтИсп.ТипПлатформы() = Перечисления.ТипПлатформы.Windows Тогда 
			Слеш = "\";
		Иначе
			Слеш = "/";
		КонецЕсли;
		
		ПутьКФайлу = Константы.ПутьКФайламНаДиске.Получить() + Слеш + Файл.ИмяФайлаНаДиске;
		ФайлНаДиске = Новый Файл(ПутьКФайлу);
		Если НЕ ФайлНаДиске.Существует() Тогда
			Возврат ""; 
		КонецЕсли;
		ДвоичныеДанные = Новый ДвоичныеДанные(ПутьКФайлу);
		
	Иначе
		
		ДвоичныеДанные = Файл.Данные.Получить();
		
	КонецЕсли;
	
	Возврат ДвоичныеДанные;

КонецФункции // ДвоичныеДанныеФайла()
