
// Сохраняет на сервере загруженный пользователем файл, который в данный момент находится во временном хранилище,
// после этого создает элемент справочника Файлы.
// Возвращает ссылку на элемент справочника.
// Параметры:
//  АдресВХранилище		- Строка - Адрес во временном хранилище, куда был помещен файл с клиента
//  КороткоеИмяФайла	- Строка - Название файла на клиенте
//
// Возвращаемое значение:
//  СправочникСсылка.Файлы - Ссылка на созданный файл
// 
Функция ЗагрузитьФайл(АдресВХранилище, КороткоеИмяФайла) Экспорт
	
	ИдентификаторФайла = Новый УникальныйИдентификатор();
	
	Пользователь = ПараметрыСеанса.ТекущийПользователь;
	
	ЧастиИмениФайла = СтрРазделить(КороткоеИмяФайла, ".");
	КороткоеИмяФайлаБезРасширения = ЧастиИмениФайла[0];
	РасширениеФайла = ЧастиИмениФайла[1];
	
	// Получим файл из временного хранилища
	ДанныеФайла = ПолучитьИзВременногоХранилища(АдресВХранилище);
	РазмерФайла = ДанныеФайла.Размер();
	
	МаксимальныйРазмерФайла = Константы.МаксимальныйРазмерФайла.Получить();
	
	Если МаксимальныйРазмерФайла > 0 Тогда
		Если РазмерФайла > МаксимальныйРазмерФайла Тогда
			Сообщить("Допускаются файлы размером до " + Строка(МаксимальныйРазмерФайла/1024) + " Кб");
			Возврат Справочники.Файлы.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
	ДопустимыеРасщиренияФайла = Константы.ДопустимыеРасширенияФайлов.Получить();
	
	Если Не ПустаяСтрока(ДопустимыеРасщиренияФайла) Тогда 
		Если СтрНайти(ДопустимыеРасщиренияФайла, РасширениеФайла) = 0 Тогда
			Сообщить("Допускаются файлы с расширениями " + ДопустимыеРасщиренияФайла);
			Возврат Справочники.Файлы.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
	Хеш = Новый ХешированиеДанных(ХешФункция.MD5);
	Хеш.Добавить(ДанныеФайла);
	
	Если Константы.МестоХраненияФайлов.Получить() = Перечисления.МестаХраненияФайлов.ЛокальныйДиск Тогда
		
		ИмяФайлаНаДиске = РаботаСФайламиСервер.СоздатьФайлНаДиске(КороткоеИмяФайла, ДанныеФайла, ИдентификаторФайла);
		
		// Созданим элемент справочника
		НовыйФайл = Справочники.Файлы.СоздатьЭлемент();
		НовыйФайл.Наименование 			= КороткоеИмяФайла;
		НовыйФайл.ДатаЗагрузки 			= ТекущаяДата();
		НовыйФайл.МестоХранения			= Перечисления.МестаХраненияФайлов.ИнформационнаяБаза;
		НовыйФайл.Автор 				= Пользователь;
		НовыйФайл.ИмяФайлаНаДиске 		= ИмяФайлаНаДиске;
		НовыйФайл.Расширение 			= РасширениеФайла;
		НовыйФайл.Размер 				= РазмерФайла;
		НовыйФайл.ИдентификаторФайла 	= Строка(ИдентификаторФайла);
		НовыйФайл.MD5 					= СтрЗаменить(Строка(Хеш.ХешСумма), " ", "");
		
		Попытка
			НовыйФайл.Записать();
		Исключение
			Возврат Справочники.Файлы.ПустаяСсылка();
		КонецПопытки;
		
	Иначе
		
		// Созданим элемент справочника
		НовыйФайл = Справочники.Файлы.СоздатьЭлемент();
		НовыйФайл.Наименование 			= КороткоеИмяФайла;
		НовыйФайл.ДатаЗагрузки 			= ТекущаяДата();
		НовыйФайл.МестоХранения			= Перечисления.МестаХраненияФайлов.ИнформационнаяБаза;
		НовыйФайл.Автор 				= Пользователь;
		НовыйФайл.Расширение 			= РасширениеФайла;
		НовыйФайл.Размер 				= РазмерФайла;
		НовыйФайл.ИдентификаторФайла 	= Строка(ИдентификаторФайла);
		НовыйФайл.MD5 					= СтрЗаменить(Строка(Хеш.ХешСумма), " ", "");
		НовыйФайл.Данные 				= Новый ХранилищеЗначения(ДанныеФайла, Новый СжатиеДанных());
		
		Попытка
			НовыйФайл.Записать();
		Исключение
			Возврат Справочники.Файлы.ПустаяСсылка();
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат НовыйФайл.Ссылка;
	
КонецФункции
