#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда // Для работы толстого клиента https://its.1c.ru/db/v8std#content:680:hdoc

// Функция получает информацию какие версию обновляются и в зависимости от этого 
// запускает определенные процедуры предназначенные для обновления конкретных версий
Функция ВыполнитьОбновлениеКонфигурации() Экспорт
	
	Результат = Истина;
	
	// Выполним первоначальное заполнение базы - попросим указать путь до исполняемого файла.
	Если ОбновлениеКонфигурацииСервер.ПолучитьЗарегистрированнуюВерсиюКонфигурации() = "0.0.0.0" Тогда
		Результат = ВыполнитьПервоначальноеЗаполнениеБазы();
	КонецЕсли;

	// Секция процедур обновлений
	Если Не ОбновлениеКонфигурацииСервер.ПолучитьЗарегистрированнуюВерсиюКонфигурации() =  ОбновлениеКонфигурацииСервер.ПолучитьВерсиюКонфигурации() Тогда
		// Получим версии которые надо обработать при обновлении
		МассивВерсийКОбновлению = МассивВерсийДляОбновления();
		// Последовательно выполним все итерации обновлений
		Для Каждого Версия Из МассивВерсийКОбновлению Цикл
			Если  Версия = "1.0.1.2" Тогда
				// Здесь должно быть обновление для конкретной версии
				Результат = ВыполнитьОбновление_1_0_1_2();
			ИначеЕсли Версия = "1.0.1.3" Тогда
				// Здесь должно быть обновление для конкретной версии
				Результат = ВыполнитьОбновление_1_0_1_3();
			ИначеЕсли Версия = "1.0.2.1" Тогда
				// Здесь должно быть обновление для конкретной версии
				Результат = ВыполнитьОбновление_1_0_2_1();
			ИначеЕсли Версия = "1.0.3" Тогда
				// Здесь должно быть обновление для конкретной версии
				Результат = ВыполнитьОбновление_1_0_3();
			ИначеЕсли Версия = "1.0.5" Тогда
				// Здесь должно быть обновление для конкретной версии
				Результат = ВыполнитьОбновление_1_0_5();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ВыполнитьОбновлениеКонфигурации()

// Выдает массив версий, которые требуют выполнение обработок при обновлении
// то есть выдает все версии с версии, указанной в константе до текущей версии метаданных
//
// Параметры нет
//
// Возвращаемое значение:
//   <массив строк>   - версии конфигурации
//
Функция МассивВерсийДляОбновления()

	// !!ПРИ ДОБАВЛЕНИИ ВЕРСИЙ РАСПОЛОГАЙТЕ НОВЫЕ ВЕРСИИ ВВЕРХУ
	МассивВерсий = Новый Массив;	
	МассивВерсий.Добавить("1.0.5");
	МассивВерсий.Добавить("1.0.4");
	МассивВерсий.Добавить("1.0.3");
	МассивВерсий.Добавить("1.0.2.1");
	МассивВерсий.Добавить("1.0.1.3");
	МассивВерсий.Добавить("1.0.1.2");
	МассивВерсий.Добавить("1.0.1.1");
	МассивВерсий.Добавить("0.0.2.4");
	МассивВерсий.Добавить("0.0.2.3");
		
	МассивВерсийКОбновлению = Новый Массив;
	ВерсияКонфигурации = ОбновлениеКонфигурацииСервер.ПолучитьЗарегистрированнуюВерсиюКонфигурации();
	Для Каждого Версия Из МассивВерсий Цикл
		Если СтрНайти(ВерсияКонфигурации, Версия) > 0 Тогда 
			Прервать;
		КонецЕсли;
		МассивВерсийКОбновлению.Добавить(Версия);
	КонецЦикла;
	
	Возврат МассивВерсийКОбновлению;
	
КонецФункции // МассивВерсийДляОбновления()

// Выполняет первоначальное заполнение базы
//
Функция ВыполнитьПервоначальноеЗаполнениеБазы()
	
	// Установим константы для доступа к серверу обслуживания
	Константы.СсылкаНаОписаниеВебСервисовСервераОбслуживания.Установить("http://ghostaz.no-ip.org/maintenance_server/ws/WebService?wsdl");
	Константы.ИмяСервисаСервераОбслуживания.Установить("WebService");
	Константы.ИмяПортаСервераОбслуживания.Установить("WebServiceSoap");
	Константы.ПространствоИменСервераОбслуживания.Установить("http://ghostaz.no-ip.org");
	Константы.ПользовательСервераОбслуживания.Установить("WebService");
	Константы.ПарольСервераОбслуживания.Установить("qwerty123");
		
	Возврат Истина;
	
КонецФункции // ПервоначальноеЗаполнениеБазы()

// Выполняет действия по обновлению на версию 1.0.1.2
//
// Параметры нет
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ВыполнитьОбновление_1_0_1_2()

	Возврат Истина;
	
КонецФункции // ВыполнитьОбновление_1_0_1_2()

// Выполняет действия по обновлению на версию 1.0.1.3
//
// Параметры нет
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ВыполнитьОбновление_1_0_1_3()

	Возврат Истина;
	
КонецФункции // ВыполнитьОбновление_1_0_1_3()

// Выполняет действия по обновлению на версию 1.0.2.1
//
// Параметры нет
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ВыполнитьОбновление_1_0_2_1()

	Константы.МестоХраненияФайлов.Установить(Перечисления.МестаХраненияФайлов.ИнформационнаяБаза);
	
	Константы.ДопустимыеРасширенияФайлов.Установить("jpg; png; gif; pdf; djvu; txt");
	
	Возврат Истина;
	
КонецФункции // ВыполнитьОбновление_1_0_2_1()

// Выполняет действия по обновлению на версию 1.0.3
//
// Параметры нет
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ВыполнитьОбновление_1_0_3()

	Константы.АдресФайлаКаталогаКниг.Установить("http://static.ozone.ru/multimedia/feeds/facet/div_book/1132527.zip");
	
	Возврат Истина;
	
КонецФункции // ВыполнитьОбновление_1_0_3()

// Выполняет действия по обновлению на версию 1.0.5: Перенос наименования в ФИО
//
// Параметры нет
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ВыполнитьОбновление_1_0_5()

	Абоненты = Справочники.Абоненты.Выбрать();
	Пока Абоненты.Следующий() Цикл
		АбонентОбъект = Абоненты.ПолучитьОбъект();
		ФИО = СтрРазделить(АбонентОбъект.Наименование, " ");
		НомерПоля = 0;
		Для Каждого Поле Из ФИО Цикл
			НомерПоля = НомерПоля + 1;
			Если НомерПоля = 1 Тогда
				АбонентОбъект.Фамилия = Поле;
			КонецЕсли;
			Если НомерПоля = 2 Тогда
				АбонентОбъект.Имя = Поле;
			КонецЕсли;
			Если НомерПоля = 3 Тогда
				АбонентОбъект.Отчество = Поле;
			КонецЕсли;
		КонецЦикла;
		АбонентОбъект.Записать();
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции // ВыполнитьОбновление_1_0_3()

#Иначе
	ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли