
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Получим данные по книге
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КаталогКниг.Наименование КАК Наименование,
		|	КаталогКниг.Описание КАК Описание,
		|	КаталогКниг.Автор КАК Автор,
		|	КаталогКниг.Издательство КАК Издательство,
		|	КаталогКниг.ISBN КАК ISBN,
		|	КаталогКниг.ГодИздания КАК ГодИздания,
		|	КаталогКниг.СсылкаНаКартинку КАК СсылкаНаКартинку
		|ИЗ
		|	РегистрСведений.КаталогКниг КАК КаталогКниг
		|ГДЕ
		|	КаталогКниг.ИдентификаторКниги = &ИдентификаторКниги";
	
	Запрос.УстановитьПараметр("ИдентификаторКниги", Параметры.ИдентификаторКниги);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
		// Попробуем найти авторов в справочнике авторов
	Авторы = СтрРазделить(Автор, ";,", Ложь);
	Для Каждого Строка Из Авторы Цикл
		НоваяСтрока = АвторыСписокСтрок.Добавить();
		НоваяСтрока.Значение = Строка;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Авторы.Ссылка КАК Автор
		|ИЗ
		|	Справочник.Авторы КАК Авторы
		|ГДЕ
		|	Авторы.Наименование В(&Авторы)";
	
	Запрос.УстановитьПараметр("Авторы", Авторы);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = АвторыСписокСсылок.Добавить();
		НоваяСтрока.Значение = ВыборкаДетальныеЗаписи.Автор;
	КонецЦикла;
	
	Если АвторыСписокСсылок.Количество() = 0 Тогда
		ВариантСозданияАвторов = "Создать";
	Иначе
		ВариантСозданияАвторов = "Выбрать";
	КонецЕсли;
	
	// Попробуем найти издательство в справочнике по наименованию
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Издательства.Ссылка КАК Издательство
		|ИЗ
		|	Справочник.Издательства КАК Издательства
		|ГДЕ
		|	Издательства.Наименование = &НаименованиеИздательства";
	
	Запрос.УстановитьПараметр("НаименованиеИздательства", Издательство);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ИздательствоСсылка = ВыборкаДетальныеЗаписи.Издательство;
	КонецЦикла;
	
	Если ИздательствоСсылка.Пустая() Тогда
		ВариантСозданияИздательства = "Создать";
	Иначе
		ВариантСозданияИздательства = "Выбрать";
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВариантСозданияАвторовПриИзменении(Неопределено);
	ВариантСозданияИздательстваПриИзменении(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантСозданияАвторовПриИзменении(Элемент)
	
	Если ВариантСозданияАвторов = "Создать" Тогда
		Элементы.АвторыСписокСсылок.Видимость = Ложь;
		Элементы.АвторыСписокСтрок.Видимость = Истина;
	ИначеЕсли ВариантСозданияАвторов = "Выбрать" Тогда
		Элементы.АвторыСписокСсылок.Видимость = Истина;
		Элементы.АвторыСписокСтрок.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантСозданияИздательстваПриИзменении(Элемент)
	
	Если ВариантСозданияИздательства = "Создать" Тогда
		Элементы.ИздательствоСсылка.Видимость = Ложь;
		Элементы.Издательство.Видимость = Истина;
	ИначеЕсли ВариантСозданияИздательства = "Выбрать" Тогда
		Элементы.ИздательствоСсылка.Видимость = Истина;
		Элементы.Издательство.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗавершитьИмпортНаСервере()
	
	НачатьТранзакцию();
	
	// Сначала создадим файл обложки
	Файл = Неопределено;
	Если ЗначениеЗаполнено(СсылкаНаКартинку) Тогда
		ИмяВременногФайла = ОбщегоНазначения.ЗагрузитьФайлПоСсылке(СсылкаНаКартинку, ".jpg");
		ФайлНаДиске = Новый Файл(ИмяВременногФайла);
		Если ФайлНаДиске.Существует() Тогда
			КороткоеИмяФайла = РаботаСФайламиКлиентСервер.КороткоеИмяФайлаИзПолногоПути(ИмяВременногФайла);
			ДвоичныеДанные = Новый ДвоичныеДанные(ИмяВременногФайла);
			АдресВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
			Файл = РаботаСФайламиВызовСервера.ЗагрузитьФайл(АдресВХранилище, КороткоеИмяФайла);
		КонецЕсли;
	КонецЕсли;
	
	// Теперь создадим книгу
	ИздательствоДляСозданияКниги = Неопределено;
	Если ВариантСозданияИздательства = "Создать" Тогда
		Если ЗначениеЗаполнено(Издательство) Тогда
			ИздательствоДляСозданияКниги = Справочники.Издательства.СоздатьИздательство(Издательство);
			ИздательствоСсылка = ИздательствоДляСозданияКниги;
		КонецЕсли;
	ИначеЕсли ВариантСозданияИздательства = "Выбрать" Тогда
		ИздательствоДляСозданияКниги = ИздательствоСсылка;
	КонецЕсли;
	
	АвторыДляСозданияКниги = Новый Массив;
	Если ВариантСозданияАвторов = "Создать" Тогда
		Для Каждого Строка Из АвторыСписокСтрок Цикл
			Если ЗначениеЗаполнено(Строка.Значение) Тогда
				АвторыДляСозданияКниги.Добавить(Справочники.Авторы.СоздатьАвтора(Строка.Значение));
			КонецЕсли;
		КонецЦикла;
		АвторыСписокСсылок.ЗагрузитьЗначения(АвторыДляСозданияКниги);
	ИначеЕсли ВариантСозданияАвторов = "Выбрать" Тогда
		АвторыДляСозданияКниги = АвторыСписокСсылок.ВыгрузитьЗначения();
	КонецЕсли;
	
	Книга = Справочники.Книги.СоздатьКнигу(
			Наименование,
			Наименование,
			Описание,
			АвторыДляСозданияКниги,
			ИздательствоДляСозданияКниги,
			0,
			ГодИздания,
			"",
			ISBN,
			"",
			Штрихкод,
			Файл);
	
	// Сделаем поступлении книги в библиотеку
	ДокументПоступления = Документы.ПоступлениеКниг.СоздатьДокумент();
	ДокументПоступления.Дата = ТекущаяДата();
	НоваяСтрока = ДокументПоступления.Книги.Добавить();
	НоваяСтрока.Книга = Книга;
	ДокументПоступления.Комментарии = "Импорт книги из каталога книг";
	Попытка
		ДокументПоступления.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не удалось создать документ поступления книг";
		СообщениеПользователю.Сообщить();
		ОбщегоНазначения.ЗафиксироватьОшибку(СообщениеПользователю.Текст, ОписаниеОшибки, Метаданные.Документы.ПоступлениеКниг, Наименование);
	КонецПопытки;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьИмпорт(Команда)
	
	ЗавершитьИмпортНаСервере();
	ПоказатьЗначение( , Книга);
	
КонецПроцедуры
